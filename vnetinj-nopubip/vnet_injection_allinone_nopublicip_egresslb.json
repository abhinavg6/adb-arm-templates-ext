{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nsgName": {
      "defaultValue": "databricks-nsg",
      "type": "string",
      "metadata": {
        "description": "The name of the network security group to create."
      }
    },
    "vnetName": {
      "defaultValue": "databricks-vnet",
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create."
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Databricks workspace to create."
      }
    },
    "privateSubnetName": {
      "defaultValue": "private-subnet",
      "type": "string",
      "metadata": {
        "description": "The name of the private subnet to create."
      }
    },
    "publicSubnetName": {
      "defaultValue": "public-subnet",
      "type": "string",
      "metadata": {
        "description": "The name of the public subnet to create."
      }
    },
    "pricingTier": {
      "defaultValue": "premium",
      "allowedValues": [
        "trial",
        "standard",
        "premium"
      ],
      "type": "string",
      "metadata": {
        "description": "The pricing tier of workspace."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetCidr": {
      "defaultValue": "10.179.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the vnet."
      }
    },
    "privateSubnetCidr": {
      "defaultValue": "10.179.0.0/18",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the private subnet."
      }
    },
    "publicSubnetCidr": {
      "defaultValue": "10.179.64.0/18",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the public subnet.."
      }
    },
    "enableNoPublicIp": {
      "defaultValue": "[bool('false')]",
      "type": "bool",
      "metadata": {
        "description": "Whether workspace should use Public IPs on cluster nodes or not."
      }
    },
    "loadBalancerName": {
      "defaultValue": "myLoadBalancer",
      "type": "string",
      "metadata": {
        "description": "Name of the outbound Load Balancer."
      }
    },
    "loadBalancerBackendPoolName": {
      "defaultValue": "myLoadBalancerBackendPool",
      "type": "string",
      "metadata": {
        "description": "Name of the outbound Load Balancer's Backend Pool."
      }
    },
    "loadBalancerFrontendConfigName": {
      "defaultValue": "myLoadBalancerFrontendConfig",
      "type": "string",
      "metadata": {
        "description": "Name of the outbound Load Balancer's Frontend Config."
      }
    },
    "loadBalancerPublicIpName": {
      "defaultValue": "myLoadBalancerPublicIP",
      "type": "string",
      "metadata": {
        "description": "Name of the outbound Load Balancer public IP."
      }
    }
  },
  "variables": {
    "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
    "managedResourceGroupName": "[concat('databricks-rg-', parameters('workspaceName'), '-', uniqueString(parameters('workspaceName'), resourceGroup().id))]",
    "loadBalancerId": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]"
  },
  "resources": [{
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[parameters('location')]",
      "name": "[parameters('nsgName')]"
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('loadBalancerPublicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "name": "[parameters('loadBalancerName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('loadBalancerPublicIpName'))]"
      ],
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[parameters('loadBalancerFrontendConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('loadBalancerPublicIpName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('loadBalancerBackendPoolName')]",
            "type": "Microsoft.Network/loadBalancers/backendAddressPools"
          }
        ],
        "outboundRules": [
          {
            "name": "databricks-outbound-rule",
            "type": "Microsoft.Network/loadBalancers/outboundRules",
            "properties": {
              "allocatedOutboundPorts": 0,
              "protocol": "All",
              "enableTcpReset": true,
              "idleTimeoutInMinutes": 4,
              "backendAddressPool": {
                "id": "[concat(variables('loadBalancerId'), '/backendAddressPools/', parameters('loadBalancerBackendPoolName'))]"
              },
              "frontendIPConfigurations": [
                {
                  "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/', parameters('loadBalancerFrontendConfigName'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "name": "[parameters('vnetName')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetCidr')]"
          ]
        },
        "subnets": [{
            "name": "[parameters('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('publicSubnetCidr')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgId')]"
              },
              "delegations": [{
                "name": "databricks-del-public",
                "properties": {
                  "serviceName": "Microsoft.Databricks/workspaces"
                }
              }]
            }
          },
          {
            "name": "[parameters('privateSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privateSubnetCidr')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgId')]"
              },
              "delegations": [{
                "name": "databricks-del-private",
                "properties": {
                  "serviceName": "Microsoft.Databricks/workspaces"
                }
              }]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Databricks/workspaces",
      "location": "[parameters('location')]",
      "name": "[parameters('workspaceName')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('pricingTier')]"
      },
      "comments": "The managed resource group specified will be locked after deployment.",
      "properties": {
        "ManagedResourceGroupId": "[variables('managedResourceGroupId')]",
        "parameters": {
          "customVirtualNetworkId": {
            "value": "[variables('vnetId')]"
          },
          "customPublicSubnetName": {
            "value": "[parameters('publicSubnetName')]"
          },
          "customPrivateSubnetName": {
            "value": "[parameters('privateSubnetName')]"
          },
          "enableNoPublicIp": {
            "value": "[parameters('enableNoPublicIp')]"
          },
          "loadBalancerId": {
            "value": "[variables('loadBalancerId')]"
          },
          "loadBalancerBackendPoolName": {
            "value": "[parameters('loadBalancerBackendPoolName')]"
          }
        }
      }
    }
  ]
}